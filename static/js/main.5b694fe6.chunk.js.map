{"version":3,"sources":["components/SVGCircle.js","components/CountdownItem.js","components/Countdown.js","components/AddDate.js","App.js","index.js"],"names":["SVGCircle","className","fill","stroke","strokeWidth","d","describeArc","this","props","radius","Component","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","join","CountdownItem","isNaN","timer","name","Countdown","state","days","undefined","hours","minutes","seconds","interval","setInterval","then","Date","timeTillDate","now","miliseconds","getTime","floor","setState","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","number","in_min","in_max","out_min","out_max","AddDate","value","formatDate","onSubmit","e","preventDefault","onChange","target","date","getFullYear","appendLeadingZeroes","getMonth","getDate","getHours","getMinutes","n","maxDate","setFullYear","type","min","max","required","App","handleChange","newDate","style","textAlign","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b694fe6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SVGCircle extends Component {\r\n    render() {\r\n        return (\r\n            <svg className=\"countdown-svg\">\r\n                <path\r\n                    fill=\"none\"\r\n                    stroke=\"#333\"\r\n                    strokeWidth=\"4\"\r\n                    d={describeArc(50, 50, 48, 0, this.props.radius)}\r\n                />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\r\n\r\n    return {\r\n        x: centerX + radius * Math.cos(angleInRadians),\r\n        y: centerY + radius * Math.sin(angleInRadians)\r\n    };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle) {\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n    var d = [\r\n        'M',\r\n        start.x,\r\n        start.y,\r\n        'A',\r\n        radius,\r\n        radius,\r\n        0,\r\n        largeArcFlag,\r\n        0,\r\n        end.x,\r\n        end.y\r\n    ].join(' ');\r\n\r\n    return d;\r\n}\r\n","import React, { Component } from 'react';\r\nimport SVGCircle from './SVGCircle';\r\n\r\nexport default class CountdownItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"countdown-item\">\r\n                <SVGCircle radius={isNaN(this.props.timer) ? 359.999 :this.props.radius} />\r\n                {this.props.timer}\r\n                <span>{this.props.name}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CountdownItem from './CountdownItem';\r\n\r\nexport default class Countdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            days: undefined,\r\n            hours: undefined,\r\n            minutes: undefined,\r\n            seconds: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            const then = new Date(this.props.timeTillDate);\r\n            const now = new Date();\r\n            let miliseconds = then.getTime() - now.getTime(); miliseconds = miliseconds < 0 ? 0 : miliseconds;\r\n            const days = Math.floor(miliseconds / (1000 * 3600 * 24));\r\n            miliseconds %= 1000 * 3600 * 24;\r\n            const hours = Math.floor(miliseconds / (1000 * 3600));\r\n            miliseconds %= 1000 * 3600;\r\n            const minutes = Math.floor(miliseconds / 60000);\r\n            miliseconds %= 60000;\r\n            const seconds = Math.floor(miliseconds / 1000);\r\n\r\n            if (seconds === 0 && minutes === 0 && hours === 0 && days === 0) {\r\n                this.setState({\r\n                    days: 'D', hours: 'O', minutes: 'N', seconds: 'E'\r\n                })\r\n            }\r\n            else {\r\n                this.setState({ days, hours, minutes, seconds });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const { days, hours, minutes, seconds } = this.state;\r\n\r\n        // Mapping the date values to radius values\r\n        const daysRadius = mapNumber(days, 365, 0, 0, 360);\r\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n        return (\r\n            <div className=\"countdown-wrapper\">\r\n                <CountdownItem \r\n                    name={'days'}\r\n                    timer={days}\r\n                    radius={daysRadius} />\r\n                <CountdownItem \r\n                    name={'hours'}\r\n                    timer={hours}\r\n                    radius={hoursRadius} />\r\n                <CountdownItem \r\n                    name={'minutes'}\r\n                    timer={minutes}\r\n                    radius={minutesRadius} />\r\n                <CountdownItem \r\n                    name={'seconds'}\r\n                    timer={seconds}\r\n                    radius={secondsRadius} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n    return (\r\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AddDate extends Component {\r\n    state = {\r\n        value: this.formatDate(new Date())\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onChange(this.state.value);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({value: e.target.value})\r\n    }\r\n\r\n    formatDate(date) {\r\n        return date.getFullYear() + \"-\" + this.appendLeadingZeroes(date.getMonth() + 1) + \"-\" + this.appendLeadingZeroes(date.getDate()) + \"T\" + this.appendLeadingZeroes(date.getHours()) + \":\" + this.appendLeadingZeroes(date.getMinutes());\r\n    }\r\n\r\n    appendLeadingZeroes(n){\r\n        if(n <= 9){\r\n          return \"0\" + n;\r\n        }\r\n        return n\r\n      }\r\n\r\n    render() {\r\n        let maxDate = new Date();\r\n        maxDate.setFullYear(maxDate.getFullYear() + 1);\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input \r\n                    type=\"datetime-local\"\r\n                    min={this.formatDate(new Date())}\r\n                    max={this.formatDate(maxDate)}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange} required/>\r\n                <input \r\n                    type=\"submit\" value=\"START\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Countdown from './components/Countdown';\nimport AddDate from './components/AddDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: Date.now()\n    };\n  }\n\n  handleChange = (date) => {\n    const newDate = new Date(date);\n    this.setState({date: newDate});\n  }\n\n  render() {\n    return (\n      <div style={{textAlign: 'center'}}>\n        <h1>Countdown</h1>\n        <AddDate \n          date={this.state.date} \n          onChange={this.handleChange} />\n        <Countdown timeTillDate={this.state.date} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}